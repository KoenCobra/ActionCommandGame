  @page "/create"
  @page "/create/{Id:int}"
  @inject NavigationManager _navigationManager
  @inject IPlayerApi _playerApi

  <div class="vh-100 create-update-background d-flex justify-content-center align-items-center">
      <div class="wrapper">
          <div class="w-100 text-center">
               <a href="/players"><i data-bs-toggle="tooltip" data-bs-placement="top" title="Back To Players" class="fas back-dumbell fa-dumbbell fa-fw fa-5x"></i></a>
          </div>
          <EditForm Model="Player" OnValidSubmit="HandleCreateUpdate" class="p-3 mt-3">
              <DataAnnotationsValidator/>
              <div class="form-field d-flex align-items-center">
                  <span class="far fa-user"></span>
                  <InputText @bind-Value="Player.Name" placeholder="name"/>
                  <ValidationMessage For="() => Player.Name"/>
              </div>
              <div class="form-field d-flex align-items-center">
                  <span class="fas fa-money-bill-alt"></span>
                  <InputNumber @bind-Value="Player.Money" placeholder="money"/>
                  <ValidationMessage For="() => Player.Money"/>
              </div>
              <div class="form-field d-flex align-items-center">
                  <span class="fas fa-chart-line"></span>
                  <InputNumber @bind-Value="Player.Experience" placeholder="expercience"/>
                  <ValidationMessage For="() => Player.Experience"/>
              </div>
              <div class="form-field d-flex align-items-center">
                  <span class="fas fa-camera"></span>
                  <InputText @bind-Value="Player.ImageName" placeholder="image"/>
                  <ValidationMessage For="() => Player.ImageName"/>
                  </div>
              <div class="text-center fs-6 flex-column d-flex">
                  <button type="submit" class="btn change-player-btn bg-black border-white primary-color rounded-pill">
                      <i class="fas fa-user-check"></i>
                      @Title
                  </button>
                  <a href="/players" class="btn cancel-player-btn rounded-pill mt-2">
                      <i class="fas fa-user-alt-slash"></i>
                          CANCEL
                      </a>
              </div>
          </EditForm>
      </div>
  </div>

  @code {

    [Parameter]
    public int? Id { get; set; }

    private string Title { get; set; } = "CREATE";

    private PlayerResult Player { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            Title = "UPDATE";
            var result = await _playerApi.GetAsync(Id.Value);
            Player = result.Data;
        }

        await base.OnInitializedAsync();
    }

    private async Task HandleCreateUpdate()
    {
        if (Player.Id != null && Title == "UPDATE")
        {
            await _playerApi.Update(Player.Id, Player);
        }
        else
        {
            await _playerApi.Create(Player);
        }

        _navigationManager.NavigateTo("/players");
    }
}
